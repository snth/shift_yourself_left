networks:
  recipe-network:
    name: recipe-network
    external: true

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: recipe_db
      MYSQL_USER: recipe_user
      MYSQL_PASSWORD: recipe_password
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql
    networks:
      - recipe-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "mysql+pymysql://recipe_user:recipe_password@db/recipe_db"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - recipe-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 10s
      timeout: 10s
      retries: 5

  app_tests:
    build: app_tests
    environment:
      API_BASE_URL: "http://app:8000"
      DATABASE_URL: "mysql+pymysql://recipe_user:recipe_password@db/recipe_db"
    command: pytest tests/ -v
    depends_on:
      app:
        condition: service_healthy
    networks:
      - recipe-network

  ingest:
    build:
      context: ingest
    environment:
      DATABASE_URL: "mysql+pymysql://recipe_user:recipe_password@db/recipe_db"
    depends_on:
      app_tests:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    networks:
      - recipe-network

  transform:
    build:
      context: transform
    environment:
      DATABASE_URL: "mysql+pymysql://recipe_user:recipe_password@db/recipe_db"
    depends_on:
      ingest:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    networks:
      - recipe-network
